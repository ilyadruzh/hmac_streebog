// Streebog little-endian block checksum:
// the 512-bit key block, XORed with pad, sums up with the message

def main(u32 pad, u32[8] k, u32[8] m) -> u32[16]:
    u32 c01 = ((k[0] & 0xff000000) >> 8) + ((m[0] & 0xff000000) >> 8)
    u32 c02 = (k[0] & 0x00ff0000) + (m[0] & 0x00ff0000) + (c01 >> 8)
    u32 c03 = (k[0] & 0x0000ff00) + (m[0] & 0x0000ff00) + (c02 >> 16)
    u32 c04 = (k[0] & 0x000000ff) + (m[0] & 0x000000ff) + (c03 >> 16)
    u32 c11 = ((k[1] & 0xff000000) >> 8) + ((m[1] & 0xff000000) >> 8) + (c04 << 8)
    u32 c12 = (k[1] & 0x00ff0000) + (m[1] & 0x00ff0000) + (c11 >> 8)
    u32 c13 = (k[1] & 0x0000ff00) + (m[1] & 0x0000ff00) + (c12 >> 16)
    u32 c14 = (k[1] & 0x000000ff) + (m[1] & 0x000000ff) + (c13 >> 16)
    u32 c21 = ((k[2] & 0xff000000) >> 8) + ((m[2] & 0xff000000) >> 8) + (c14 << 8)
    u32 c22 = (k[2] & 0x00ff0000) + (m[2] & 0x00ff0000) + (c21 >> 8)
    u32 c23 = (k[2] & 0x0000ff00) + (m[2] & 0x0000ff00) + (c22 >> 16)
    u32 c24 = (k[2] & 0x000000ff) + (m[2] & 0x000000ff) + (c23 >> 16)
    u32 c31 = ((k[3] & 0xff000000) >> 8) + ((m[3] & 0xff000000) >> 8) + (c24 << 8)
    u32 c32 = (k[3] & 0x00ff0000) + (m[3] & 0x00ff0000) + (c31 >> 8)
    u32 c33 = (k[3] & 0x0000ff00) + (m[3] & 0x0000ff00) + (c32 >> 16)
    u32 c34 = (k[3] & 0x000000ff) + (m[3] & 0x000000ff) + (c33 >> 16)
    u32 c41 = ((k[4] & 0xff000000) >> 8) + ((m[4] & 0xff000000) >> 8) + (c34 << 8)
    u32 c42 = (k[4] & 0x00ff0000) + (m[4] & 0x00ff0000) + (c41 >> 8)
    u32 c43 = (k[4] & 0x0000ff00) + (m[4] & 0x0000ff00) + (c42 >> 16)
    u32 c44 = (k[4] & 0x000000ff) + (m[4] & 0x000000ff) + (c43 >> 16)
    u32 c51 = ((k[5] & 0xff000000) >> 8) + ((m[5] & 0xff000000) >> 8) + (c44 << 8)
    u32 c52 = (k[5] & 0x00ff0000) + (m[5] & 0x00ff0000) + (c51 >> 8)
    u32 c53 = (k[5] & 0x0000ff00) + (m[5] & 0x0000ff00) + (c52 >> 16)
    u32 c54 = (k[5] & 0x000000ff) + (m[5] & 0x000000ff) + (c53 >> 16)
    u32 c61 = ((k[6] & 0xff000000) >> 8) + ((m[6] & 0xff000000) >> 8) + (c54 << 8)
    u32 c62 = (k[6] & 0x00ff0000) + (m[6] & 0x00ff0000) + (c61 >> 8)
    u32 c63 = (k[6] & 0x0000ff00) + (m[6] & 0x0000ff00) + (c62 >> 16)
    u32 c64 = (k[6] & 0x000000ff) + (m[6] & 0x000000ff) + (c63 >> 16)
    u32 c71 = ((k[7] & 0xff000000) >> 8) + ((m[7] & 0xff000000) >> 8) + (c64 << 8)
    u32 c72 = (k[7] & 0x00ff0000) + (m[7] & 0x00ff0000) + (c71 >> 8)
    u32 c73 = (k[7] & 0x0000ff00) + (m[7] & 0x0000ff00) + (c72 >> 16)
    u32 c74 = (k[7] & 0x000000ff) + (m[7] & 0x000000ff) + (c73 >> 16)
    u32 c81 = 0x00010000 + (pad & 0x00ff0000) + (c74 << 8)
    u32 c82 = (pad & 0x00ff0000) + (c81 >> 8)
    u32 c83 = (pad & 0x0000ff00) + (c82 >> 16)
    u32 c84 = (pad & 0x000000ff) + (c83 >> 16)
    return [\
        ((c01 << 8) & 0xff000000) | (c02 & 0x00ff0000) | (c03 & 0x0000ff00) | (c04 & 0x000000ff),
        ((c11 << 8) & 0xff000000) | (c12 & 0x00ff0000) | (c13 & 0x0000ff00) | (c14 & 0x000000ff),
        ((c21 << 8) & 0xff000000) | (c22 & 0x00ff0000) | (c23 & 0x0000ff00) | (c24 & 0x000000ff),
        ((c31 << 8) & 0xff000000) | (c32 & 0x00ff0000) | (c33 & 0x0000ff00) | (c34 & 0x000000ff),
        ((c41 << 8) & 0xff000000) | (c42 & 0x00ff0000) | (c43 & 0x0000ff00) | (c44 & 0x000000ff),
        ((c51 << 8) & 0xff000000) | (c52 & 0x00ff0000) | (c53 & 0x0000ff00) | (c54 & 0x000000ff),
        ((c61 << 8) & 0xff000000) | (c62 & 0x00ff0000) | (c63 & 0x0000ff00) | (c64 & 0x000000ff),
        ((c71 << 8) & 0xff000000) | (c72 & 0x00ff0000) | (c73 & 0x0000ff00) | (c74 & 0x000000ff),
        ((c81 << 8) & 0xff000000) | (c82 & 0x00ff0000) | (c83 & 0x0000ff00) | (c84 & 0x000000ff),
        pad, pad, pad, pad, pad, pad, pad ]